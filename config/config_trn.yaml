get_stat_images.py:
  working_directory: .
  input_folder: data/RCNE/panoramic_images/

prepare_coco_data.py:
  working_directory: .
  output_dir: outputs/OD
  image_dir: data/RCNE/panoramic_images/
  COCO_files:
    RCNE: data/RCNE/Object_Detect_GT/ne_COCO.json
  license: [{id: 1,name: unknown, url: unknown}]
  categories: [{id: 1, name: manhole, supercategory: round plate}]
  tile_size: 512
  ratio_wo_annotations: 0.05
  seed: 42
  overwrite_images: False

train_model.py:
  debug_mode: False
  working_directory: outputs/OD
  log_subfolder: logs
  sample_tagged_img_subfolder: sample_training_images
  COCO_files:
    trn: COCO_trn.json
    val: COCO_val.json
    tst: COCO_tst.json
  detectron2_config_file: ../../config/detectron2_config.yaml
  model_weights:
    model_zoo_checkpoint_url: COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_1x.yaml
  
make_inference.py:
  working_directory: outputs/OD
  sample_tagged_img_subfolder: sample_tagged_images
  COCO_files:           # relative paths, w/ respect to the working_folder
    trn: COCO_trn.json
    val: COCO_val.json
    tst: COCO_tst.json
  detectron2_config_file: ../../config/detectron2_config.yaml # path relative to the working_folder
  model_weights:
    pth_file: logs/model_final.pth # trained model minimizing the validation loss, monitor via tensorboard (tensorboard --logdir </logs>)
  image_metadata_json: img_metadata.json
  score_lower_threshold: 0.05